<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-02-21T06:23:02+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">woongLog</title><author><name>woong</name></author><entry><title type="html">[Docker Container] WAS - DB 연결</title><link href="http://localhost:4000/docker/docker1/" rel="alternate" type="text/html" title="[Docker Container] WAS - DB 연결" /><published>2023-10-06T00:00:00+09:00</published><updated>2023-10-06T00:00:00+09:00</updated><id>http://localhost:4000/docker/docker1</id><content type="html" xml:base="http://localhost:4000/docker/docker1/"><![CDATA[<p>#</p>

<h2 id="docker-컨테이너를-활용한-3-tier-architecture-구성">Docker 컨테이너를 활용한 3-Tier Architecture 구성</h2>

<h3 id="ws---was---db-연결---3-was---db-connecting">WS - WAS - DB 연결 - (3) WAS - DB Connecting</h3>

<p>기본적으로 도커 컨테이너를 실행시키고, 도커 컨테이너 쉘 bash로 작업한다.</p>

<ul>
  <li><strong>WAS(Tomcat) - DB(MariaDB) 연결</strong>
    <ul>
      <li>MariaDB 테스트테이블 생성
        <ul>
          <li>데이터베이스 이름: mydb</li>
          <li>테이블 이름: users</li>
          <li>테이블 칼럼: id, username, email</li>
        </ul>
      </li>
      <li>연결을 위한 JDBC(자바 프로그램이 데이터베이스와 연결되어 데이터를 주고 받을 수 있게 해주는 프로그래밍 인터페이스) 설치
        <ul>
          <li>다운로드 명령어</li>
        </ul>

        <div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  wget https://dlm.mariadb.com/2896635/Connectors/java/connector-java-2.7.9/mariadb-java-client-2.7.9.jar
</code></pre></div>        </div>

        <ul>
          <li>설치 경로: tomcat/lib
  예시) root@3a324624253c:/usr/local/tomcat/lib#</li>
          <li>기본적으로 Docker 컨테이너에서는 관리자 권한이 없기 때문에 타 디렉터리에서 설치 후 cp명령 혹은 mv명령어로 이동을 시도할 수 없으므로 Dockerfile 수정을 이용해야 하는데, 번거로우므로 경로에 이동 후 설치하는 과정을 가졌다.</li>
        </ul>
      </li>
      <li>MariaDB 주소 확인
        <ul>
          <li>
            <p>주소 확인 명령어</p>

            <div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  docker inspect mariadb
</code></pre></div>            </div>

            <p><strong>“IPAddress”: “172.17.0.2”,</strong> 부분에서 ip를 확인한다.</p>
          </li>
        </ul>
      </li>
      <li>
        <p>Tomcat서버에서 받아오기위한 시작페이지를 수정한다.</p>

        <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="o">&lt;%</span><span class="err">@</span> <span class="n">page</span> <span class="n">language</span><span class="o">=</span><span class="s">"java"</span> <span class="n">contentType</span><span class="o">=</span><span class="s">"text/html;charset=UTF-8"</span> <span class="n">pageEncoding</span><span class="o">=</span><span class="s">"UTF-8"</span> <span class="o">%&gt;</span>
  <span class="o">&lt;%</span><span class="err">@</span> <span class="n">page</span> <span class="kn">import</span> <span class="err">=</span> <span class="err">"</span><span class="nn">java.sql.*</span><span class="s">" %&gt;
  &lt;html&gt;
  &lt;head&gt;
      &lt;title&gt;Users Table&lt;/title&gt;
      &lt;style&gt;
          table, th, td {
              border: 1px solid black;
              border-collapse: collapse;
              padding: 10px;
          }
      &lt;/style&gt;
  &lt;/head&gt;
  &lt;body&gt;
        
  &lt;%
  Connection conn = null;
  Statement stmt = null;
  ResultSet rs = null;
        
  try {
      String url = "</span><span class="nl">jdbc:mysql:</span><span class="c1">//172.17.0.2:3306/mydb"; // 명령어를 통해 확인한 mariadb 주소</span>
      <span class="nc">String</span> <span class="n">id</span> <span class="o">=</span> <span class="s">"root"</span><span class="o">;</span>     <span class="c1">// 접속을 위한 계정의 ID</span>
      <span class="nc">String</span> <span class="n">pw</span> <span class="o">=</span> <span class="s">"qwer1234!"</span><span class="o">;</span> <span class="c1">// 접속을 위한 계정의 암호</span>
      <span class="nc">Class</span><span class="o">.</span><span class="na">forName</span><span class="o">(</span><span class="s">"org.mariadb.jdbc.Driver"</span><span class="o">);</span>
      <span class="n">conn</span> <span class="o">=</span> <span class="nc">DriverManager</span><span class="o">.</span><span class="na">getConnection</span><span class="o">(</span><span class="n">url</span><span class="o">,</span> <span class="n">id</span><span class="o">,</span> <span class="n">pw</span><span class="o">);</span>
        
      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;h1&gt;MariaDB DB 연결 성공&lt;/h1&gt;"</span><span class="o">);</span>
        
      <span class="n">stmt</span> <span class="o">=</span> <span class="n">conn</span><span class="o">.</span><span class="na">createStatement</span><span class="o">();</span>
      <span class="n">rs</span> <span class="o">=</span> <span class="n">stmt</span><span class="o">.</span><span class="na">executeQuery</span><span class="o">(</span><span class="s">"SELECT id, username, email FROM users"</span><span class="o">);</span>
        
      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;table&gt;"</span><span class="o">);</span>
      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;tr&gt;&lt;th&gt;ID&lt;/th&gt;&lt;th&gt;Username&lt;/th&gt;&lt;th&gt;Email&lt;/th&gt;&lt;/tr&gt;"</span><span class="o">);</span>
        
      <span class="k">while</span> <span class="o">(</span><span class="n">rs</span><span class="o">.</span><span class="na">next</span><span class="o">())</span> <span class="o">{</span>
          <span class="kt">int</span> <span class="n">userId</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">"id"</span><span class="o">);</span>
          <span class="nc">String</span> <span class="n">username</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"username"</span><span class="o">);</span>
          <span class="nc">String</span> <span class="n">email</span> <span class="o">=</span> <span class="n">rs</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"email"</span><span class="o">);</span>
        
          <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;tr&gt;&lt;td&gt;"</span> <span class="o">+</span> <span class="n">userId</span> <span class="o">+</span> <span class="s">"&lt;/td&gt;&lt;td&gt;"</span> <span class="o">+</span> <span class="n">username</span> <span class="o">+</span> <span class="s">"&lt;/td&gt;&lt;td&gt;"</span> <span class="o">+</span> <span class="n">email</span> <span class="o">+</span> <span class="s">"&lt;/td&gt;&lt;/tr&gt;"</span><span class="o">);</span>
      <span class="o">}</span>
        
      <span class="n">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"&lt;/table&gt;"</span><span class="o">);</span>
  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
  <span class="o">}</span> <span class="k">finally</span> <span class="o">{</span>
      <span class="k">try</span> <span class="o">{</span>
          <span class="k">if</span> <span class="o">(</span><span class="n">rs</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
              <span class="n">rs</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
          <span class="o">}</span>
          <span class="k">if</span> <span class="o">(</span><span class="n">stmt</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
              <span class="n">stmt</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
          <span class="o">}</span>
          <span class="k">if</span> <span class="o">(</span><span class="n">conn</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
              <span class="n">conn</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
          <span class="o">}</span>
      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="nc">SQLException</span> <span class="n">se</span><span class="o">)</span> <span class="o">{</span>
          <span class="n">se</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
      <span class="o">}</span>
  <span class="o">}</span>
  <span class="o">%&gt;</span>
        
  <span class="o">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
  <span class="o">&lt;/</span><span class="n">html</span><span class="o">&gt;</span>
</code></pre></div>        </div>
      </li>
      <li>localhost:8080으로 접속해서 확인한다.</li>
    </ul>

    <p>## 실행화면
  <img src="https://github.com/xxng1/xxng1.github.io/assets/114065532/7fc54232-2e42-4508-9914-831115068cfb" alt="image" /></p>
  </li>
</ul>]]></content><author><name>woong</name></author><category term="Docker" /><category term="SysArch" /><summary type="html"><![CDATA[#]]></summary></entry><entry><title type="html">Docker Basic</title><link href="http://localhost:4000/docker/docker/" rel="alternate" type="text/html" title="Docker Basic" /><published>2023-09-22T00:00:00+09:00</published><updated>2023-09-22T00:00:00+09:00</updated><id>http://localhost:4000/docker/docker</id><content type="html" xml:base="http://localhost:4000/docker/docker/"><![CDATA[<h1 id="docker-서버-구축">Docker 서버 구축</h1>

<h2 id="docker">Docker?</h2>

<p>Docker는 컨테이너 기반 가상화 기술을 제공하는 플랫폼으로, 소프트웨어를 패키지화하고 실행하는 데 사용됩니다.</p>

<p>Docker를 사용해서 로컬 뿐만 아니라 어디서든 서버를 구축할 수 있습니다.</p>

<h1 id="docker-서버-구축-1">Docker 서버 구축</h1>

<hr />

<h3 id="설치-작업">설치 작업</h3>

<ol>
  <li>Docker 설치</li>
  <li>Docker Hub 가입</li>
  <li>실습을 위한 <strong>VM</strong>(UTM(Mac) 또는 VirtualBox(window))설치 및 <strong>Linux</strong> 가상환경 세팅
    <ol>
      <li>VirtualBox와는 다르게 UTM을 사용하게 된다면 설치 후 서버 구축 확인에 있어서 용이하도록 Ubuntu desktop까지 설치하길 권장드립니다.</li>
    </ol>
  </li>
</ol>

<h3 id="dockerfile-작성">Dockerfile 작성</h3>

<p>Docker images 파일 생성을 위해서 Dockerfile을 작성해야 합니다.</p>

<p>프로젝트 디렉토리에서 <code class="language-plaintext highlighter-rouge">Dockerfile 파일을 생성</code> 후 아래의 내용을 입력합니다.</p>

<p>React 앱을 빌드하고 Nginx 웹 서버를 사용하여 정적 파일을 제공하는 방법입니다.</p>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">FROM</span><span class="w"> </span><span class="s">node:14</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="s">build</span>

<span class="k">WORKDIR</span><span class="s"> /app</span>

<span class="k">COPY</span><span class="s"> package*.json ./</span>

<span class="k">RUN </span>npm <span class="nb">install</span>

<span class="k">COPY</span><span class="s"> . .</span>

<span class="k">RUN </span>npm run build

<span class="k">FROM</span><span class="s"> nginx:1.21</span>

<span class="k">COPY</span><span class="s"> --from=build /app/build /usr/share/nginx/html</span>

<span class="k">EXPOSE</span><span class="s"> 80</span>

<span class="k">CMD</span><span class="s"> ["nginx", "-g", "daemon off;"]</span>
</code></pre></div></div>

<h3 id="docker-image-파일-생성">Docker Image 파일 생성</h3>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker build -t kelog-homepage .
</code></pre></div></div>

<p>빌드가 완료되면 <code class="language-plaintext highlighter-rouge">docker images</code> 명령어로 image파일이 추가되었는지 확인 할 수 있습니다.</p>

<p>이미지를 Push하기 전에 실행해볼 수 있습니다.</p>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run -d -p 80:80 kelog-homepage
</code></pre></div></div>

<p>실행 후 http://localhost/ 로 접속해서 확인할 수도 있고,</p>

<p><code class="language-plaintext highlighter-rouge">docker ps</code> 명령어로 컨테이너가 실행중인지 확인할 수 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">docker ps</code> 명령어로 확인한 <code class="language-plaintext highlighter-rouge">CONTAINER ID</code> 로 실행중인 컨테이너를 종료할 수 있습니다.</p>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker stop &lt;CONTAINER ID&gt;
</code></pre></div></div>

<h3 id="docker-account에-image-파일-push">Docker Account에 Image 파일 Push</h3>

<p>Docker Account에 Image 파일을 Push한다면 docker를 활용해서 어디서든 서버를 구축할 수 있습니다.</p>

<p><code class="language-plaintext highlighter-rouge">docker login</code> 명령어로 로컬과 docker를 연결합니다.</p>

<p>이미지에 태그를 지정하지 않으면 latest로 지정되어 있습니다.</p>

<p>로컬 이미지에 원하는 태그를 붙여야 합니다.
일반적으로 이미지 이름 뒤에 <strong><code class="language-plaintext highlighter-rouge">:&lt;태그&gt;</code></strong>를 추가합니다.</p>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker tag kelog-homepage:latest xxng/kelog-homepage:v1.0
// xxng는 제 도커 아이디에요
</code></pre></div></div>

<p>태그 지정 후에는 Push를 진행합니다.</p>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker push xxng/kelog-homepage:v1.0
</code></pre></div></div>

<p>Push가 완료되면, Docker Hub의 Repository에서 확인이 가능합니다.</p>

<h3 id="가상환경에서-docker-image-pull">가상환경에서 Docker Image Pull</h3>

<p>가상환경에 Docker를 설치하고, 로그인합니다.
이후 아래 명령어로 Image를 Pull 할 수 있습니다.</p>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker pull &lt;이미지 이름&gt;:&lt;태그&gt;
</code></pre></div></div>

<h3 id="docker를-통한-서버-구축">Docker를 통한 서버 구축</h3>

<p>위에서 했던 명령어로 접속 가능합니다.</p>

<div class="language-docker highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker run -d -p 80:80 kelog-homepage
</code></pre></div></div>

<hr />

<h2 id="실행화면">실행화면</h2>
<p><img src="https://github.com/xxng1/xxng1.github.io/assets/114065532/a67018bf-14b6-4b79-b519-f03b050c5b69" alt="image" /></p>]]></content><author><name>woong</name></author><category term="Docker" /><category term="server" /><summary type="html"><![CDATA[Docker 서버 구축]]></summary></entry><entry><title type="html">Recoil와 atom</title><link href="http://localhost:4000/react/recoil_atom/" rel="alternate" type="text/html" title="Recoil와 atom" /><published>2023-09-13T00:00:00+09:00</published><updated>2023-09-20T00:00:00+09:00</updated><id>http://localhost:4000/react/recoil_atom</id><content type="html" xml:base="http://localhost:4000/react/recoil_atom/"><![CDATA[<h2 id="recoil">Recoil</h2>

<blockquote>
  <p>React 애플리케이션에서 상태 관리를 효과적으로 수행하기 위한 라이브러리로, 
전역 상태를 관리하고 컴포넌트 간에 상태를 공유할 수 있게 해준다.</p>

</blockquote>

<h2 id="atom">Atom</h2>

<blockquote>
  <p>Recoil에서 사용되는 상태 단위(컴포넌트 간에 공유할 수 있는 상태 값)
각각의 전역 상태에 대한 atom이 생성되고 해당 상태를 구독하는 구성 요소만 리렌더링
(= 불필요한 리렌더링을 방지)</p>

</blockquote>

<h3 id="예시">예시</h3>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Recoil 상태 관리 설정</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">atom</span><span class="p">,</span> <span class="nx">RecoilRoot</span><span class="p">,</span> <span class="nx">useRecoilState</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">recoil</span><span class="dl">'</span><span class="p">;</span>
</code></pre></div></div>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Atom 정의</span>
<span class="kd">const</span> <span class="nx">todoListState</span> <span class="o">=</span> <span class="nf">atom</span><span class="p">({</span>
<span class="na">key</span><span class="p">:</span> <span class="dl">'</span><span class="s1">todoListState</span><span class="dl">'</span><span class="p">,</span>
<span class="na">default</span><span class="p">:</span> <span class="p">[],</span>
<span class="p">});</span>
</code></pre></div></div>

<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// React 컴포넌트</span>
<span class="kd">function</span> <span class="nf">TodoApp</span><span class="p">()</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="p">[</span><span class="nx">todoList</span><span class="p">,</span> <span class="nx">setTodoList</span><span class="p">]</span> <span class="o">=</span> <span class="nf">useRecoilState</span><span class="p">(</span><span class="nx">todoListState</span><span class="p">);</span>
<span class="c1">// useRecoilState 훅을 사용하여 컴포넌트 내에서 해당 상태를 읽고 업데이트</span>

  <span class="kd">const</span> <span class="nx">addTodo</span> <span class="o">=</span> <span class="p">(</span><span class="nx">newTodo</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
<span class="c1">// addTodo 함수를 통해 새로운 할 일을 목록에 추가</span>
    <span class="nf">setTodoList</span><span class="p">([...</span><span class="nx">todoList</span><span class="p">,</span> <span class="nx">newTodo</span><span class="p">]);</span>
  <span class="p">};</span>

<span class="c1">// ...생략</span>
</code></pre></div></div>

<ul>
  <li>Atoms는 상태 단위이며, 업데이트와 참조가 가능하다.</li>
  <li>atom이 업데이트되면 각각의 컴포넌트들은 새로운 값을 반영하여 리렌더링 된다.</li>
  <li>atoms는 컴포넌트 내부의 상태 대신 사용될 수 있다.</li>
  <li>동일한 atom이 여러 컴포넌트에서 사용되는 경우 그 <strong>컴포넌트들은 상태</strong>를 공유한다.</li>
  <li>Atoms는 atom 함수를 사용해 생성한다.</li>
  <li>atom의 키 값은 전역적으로 고유해야 한다.</li>
</ul>]]></content><author><name>woong</name></author><category term="react" /><category term="react" /><summary type="html"><![CDATA[Recoil]]></summary></entry><entry><title type="html">Spring Boot 설치/경로설정</title><link href="http://localhost:4000/spring/springbasic1/" rel="alternate" type="text/html" title="Spring Boot 설치/경로설정" /><published>2023-09-10T00:00:00+09:00</published><updated>2023-09-10T00:00:00+09:00</updated><id>http://localhost:4000/spring/springbasic1</id><content type="html" xml:base="http://localhost:4000/spring/springbasic1/"><![CDATA[<h2 id="spring-boot-install">Spring Boot install</h2>
<ol>
  <li>vscode 확장파일설치</li>
  <li><b>java.home 경로설정</b>
    <ul>
      <li>vscode 설정 -&gt; javahome검색, settings.json
  <img src="https://github.com/xxng1/xxng1.github.io/assets/114065532/c203885d-5f58-4cac-b77d-b60a87dce626" alt="image" /></li>
    </ul>
  </li>
  <li>버전에 맞는 프로젝트 생성</li>
</ol>

<h2 id="spring-boot-실행간단-경로-설정">Spring Boot 실행/간단 경로 설정</h2>

<ol>
  <li>실행
    <ul>
      <li>Spring Boot Dashboard에서 실행 또는 run/debug 로 실행</li>
    </ul>
  </li>
  <li>경로 설정
    <div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/"</span><span class="o">)</span>
 <span class="nc">String</span> <span class="nf">home</span><span class="o">()</span> <span class="o">{</span>
     <span class="k">return</span> <span class="s">"루트"</span><span class="o">;</span>
 <span class="o">}</span>
 <span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">"/test1"</span><span class="o">)</span>
 <span class="nc">String</span> <span class="nf">hsdaa</span><span class="o">()</span> <span class="o">{</span>
     <span class="k">return</span> <span class="s">"/test1"</span><span class="o">;</span>
 <span class="o">}</span>
</code></pre></div>    </div>
    <ul>
      <li>위와 같은 방법으로 간단하게 경로 추가 가능</li>
      <li>실행화면
<img src="https://github.com/xxng1/xxng1.github.io/assets/114065532/b60e789d-74ee-4dd4-aac7-5bc362ffb7dc" alt="image" /></li>
    </ul>
  </li>
</ol>]]></content><author><name>woong</name></author><category term="spring" /><category term="spring install" /><summary type="html"><![CDATA[spring]]></summary></entry><entry><title type="html">react basic</title><link href="http://localhost:4000/react/git/" rel="alternate" type="text/html" title="react basic" /><published>2023-09-08T00:00:00+09:00</published><updated>2023-09-08T00:00:00+09:00</updated><id>http://localhost:4000/react/git</id><content type="html" xml:base="http://localhost:4000/react/git/"><![CDATA[<h2 id="react">React?</h2>

<hr />

<p>웹 어플리케이션의 UI를 효과적으로 구축하기 위해 사용하는 Javascript 기반 라이브러리.</p>

<p>앱처럼 부드럽게 동작하는 html을 제작하기 위해 사용.</p>

<h2 id="react-install">React install</h2>

<hr />

<p><a href="https://nodejs.org/en/">node.js 홈페이지</a> 에서 node.js 다운로드 후 
터미널에서 아래 명령어 차례로 실행</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm -v 
create-react-app
create-react-app -v
cd <span class="nt">&lt;파일경로&gt;</span>
create-react-app <span class="nt">&lt;프로젝트명&gt;</span>
npm run start
</code></pre></div></div>

<h2 id="react-basic">React basic</h2>

<hr />

<h3 id="jsx-문법">JSX 문법</h3>

<p>리액트의 문법으로 자바스크립트의 확장 기능, 
자바스크립트 코드 안에서 바로 HTML을 작성할 수 있도록 도움</p>

<h3 id="component와-props">component와 props</h3>

<p>component: 프로그래밍에서 재사용이 가능한 각각의 독립된 모듈</p>

<p>props: component(상위 → 하위)에 데이터를 보낼 때 사용</p>

<h3 id="component-활용한-구조">component 활용한 구조</h3>

<p><img width="1470" alt="Untitled" src="https://github.com/xxng1/xxng1.github.io/assets/114065532/9fc5e34d-9dba-4e0d-a36e-9a777c9eec55" /></p>

<ol>
  <li>해당 Component가 View에서 수행하는 동작 및 출력에 대한 부분 정의</li>
  <li>import 하여 사용할 수 있도록 export 코드 작성</li>
  <li>최상위 Component에 해당하는 app.js에서 출력</li>
  <li>Component 여러 번 포함 가능</li>
</ol>

<h2 id="react-grammar">React grammar</h2>

<hr />

<ol>
  <li>
    <p><strong>이벤트 처리 → 중괄호’{ }’ 를 사용하여 렌더링</strong></p>

    <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="p">&lt;</span><span class="nt">button</span> <span class="na">onClick</span><span class="p">=</span><span class="err">**</span><span class="si">{</span><span class="nx">shoot</span><span class="si">}</span><span class="err">**</span><span class="p">&gt;</span> Take the Shot! <span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>조건부 연산자(삼항 연산자)를 사용</strong></p>

    <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="err">❌</span> <span class="p">{</span><span class="k">if</span> <span class="nx">name</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">리액트</span><span class="dl">'</span> <span class="o">~</span><span class="p">}</span>
 <span class="err">✅</span> <span class="p">{</span><span class="nx">name</span> <span class="o">===</span> <span class="dl">'</span><span class="s1">리액트</span><span class="dl">'</span><span class="p">?</span> <span class="p">(&lt;</span><span class="nt">h1</span><span class="p">&gt;</span> o <span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;)</span> <span class="p">:</span> <span class="p">(</span> <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span> x <span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span> <span class="p">)}</span>
</code></pre></div>    </div>

    <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">// 표기법 예시</span>
 <span class="o">===</span> <span class="nx">같은지</span> <span class="nx">확인</span>
 <span class="p">...</span> <span class="nx">복사</span>
 <span class="nx">$</span> <span class="nx">변수</span> <span class="nx">표현</span>
 <span class="o">=&gt;</span> <span class="nx">값</span> <span class="nx">대입</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>class 대신 className을 사용</strong></p>

    <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"ex"</span><span class="p">&gt;</span> <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p><strong>태그 사용 시 반드시 닫는 태그 사용</strong></p>

    <div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="c1">//div skip, &lt;&gt; = &lt;Fragment&gt;</span>
 <span class="p">&lt;&gt;</span> 
 <span class="p">&lt;/&gt;</span>
</code></pre></div>    </div>
  </li>
</ol>]]></content><author><name>woong</name></author><category term="react" /><category term="react" /><summary type="html"><![CDATA[react]]></summary></entry><entry><title type="html">[11399] ATM</title><link href="http://localhost:4000/boj/boj11399/" rel="alternate" type="text/html" title="[11399] ATM" /><published>2023-03-23T00:00:00+09:00</published><updated>2023-03-31T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj11399</id><content type="html" xml:base="http://localhost:4000/boj/boj11399/"><![CDATA[<!--
test
문제 🔍
풀이 🎯 ⭕ ❌
주의할 점 🚨
짚고갈 점 ✏️ (노랑펜)
기타 🔥🌝🪐🔔
-->
<h2 id="-문제">🔍 문제</h2>
<blockquote>
  <p><a href="https://www.acmicpc.net/problem/11399">https://www.acmicpc.net/problem/11399</a></p>
</blockquote>
<div class="notice">
  <p>인하은행에는 ATM이 1대밖에 없다. 지금 이 ATM앞에 N명의 사람들이 줄을 서있다. 사람은 1번부터 N번까지 번호가 매겨져 있으며, i번 사람이 돈을 인출하는데 걸리는 시간은 Pi분이다.</p>

  <p>사람들이 줄을 서는 순서에 따라서, 돈을 인출하는데 필요한 시간의 합이 달라지게 된다. 예를 들어, 총 5명이 있고, P1 = 3, P2 = 1, P3 = 4, P4 = 3, P5 = 2 인 경우를 생각해보자. [1, 2, 3, 4, 5] 순서로 줄을 선다면, 1번 사람은 3분만에 돈을 뽑을 수 있다. 2번 사람은 1번 사람이 돈을 뽑을 때 까지 기다려야 하기 때문에, 3+1 = 4분이 걸리게 된다. 3번 사람은 1번, 2번 사람이 돈을 뽑을 때까지 기다려야 하기 때문에, 총 3+1+4 = 8분이 필요하게 된다. 4번 사람은 3+1+4+3 = 11분, 5번 사람은 3+1+4+3+2 = 13분이 걸리게 된다. 이 경우에 각 사람이 돈을 인출하는데 필요한 시간의 합은 3+4+8+11+13 = 39분이 된다.</p>

  <p>줄을 [2, 5, 1, 4, 3] 순서로 줄을 서면, 2번 사람은 1분만에, 5번 사람은 1+2 = 3분, 1번 사람은 1+2+3 = 6분, 4번 사람은 1+2+3+3 = 9분, 3번 사람은 1+2+3+3+4 = 13분이 걸리게 된다. 각 사람이 돈을 인출하는데 필요한 시간의 합은 1+3+6+9+13 = 32분이다. 이 방법보다 더 필요한 시간의 합을 최소로 만들 수는 없다.</p>

  <p>줄을 서 있는 사람의 수 N과 각 사람이 돈을 인출하는데 걸리는 시간 Pi가 주어졌을 때, 각 사람이 돈을 인출하는데 필요한 시간의 합의 최솟값을 구하는 프로그램을 작성하시오.</p>
</div>

<h2 id="-풀이">🎯 풀이</h2>
<h3 id="1-첫-번째-풀이">1. 첫 번째 풀이</h3>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">newarr</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">size</span><span class="p">){</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">size</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">sumarr</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">size</span><span class="p">){</span>
  <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">size</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="n">sum</span> <span class="o">+=</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">sum</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
  <span class="kt">int</span> <span class="n">N</span><span class="p">;</span>
  <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>
  <span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">1000</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>

  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
  <span class="p">}</span>

  <span class="n">sort</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">arr</span><span class="o">+</span><span class="n">N</span><span class="p">);</span>
  <span class="n">newarr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">N</span><span class="p">);</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">sumarr</span><span class="p">(</span><span class="n">arr</span><span class="p">,</span> <span class="n">N</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="sc">' '</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="️-회고">✏️ 회고</h2>
<p>#include <algorithm> 을 포함 안시키고 제출했는데 컴파일 에러가 났다.
sort 함수를 사용하기 위해서는 꼭 쓰도록 하자.</algorithm></p>]]></content><author><name>woong</name></author><category term="BOJ" /><category term="C++" /><category term="Greedy" /><summary type="html"><![CDATA[BOJ_C++]]></summary></entry><entry><title type="html">C++ 첫 수업 테스트</title><link href="http://localhost:4000/cpp/1/" rel="alternate" type="text/html" title="C++ 첫 수업 테스트" /><published>2023-03-08T00:00:00+09:00</published><updated>2023-06-13T00:00:00+09:00</updated><id>http://localhost:4000/cpp/1</id><content type="html" xml:base="http://localhost:4000/cpp/1/"><![CDATA[<div>
  <p>2학년 때 들어야 했던 C++ 강의를 이제서야 수강하게 됐다.</p>

  <s>수강신청은 웹보다 어플이 수강신청하기 쉽다 쉽다 했지만 내 손속도로는 컴퓨터로도 극복 가능할 줄 알았다 (이번에 결국 어플로함)</s>

  <p>우리학교에서 컴공 교수님들중에 명강의를 뽑는다고 하면 이 분의 강의를 다들 빼놓지 않곤 하는데, C++ 과목을 운 좋게 이 분의 강의로 들을 수 있게 되었다.</p>

  <p>첫 수업에서 수준 확인을 위한 테스트를 봤다.</p>

  <p>B4용지를 주고 다음을 손코딩하라고 하셨다.</p>
  <ol>
    <li>크기 5인 배열을 선언하고 적절한 값을 넣을 것</li>
    <li>배열에서 최솟값을 return하는 func 함수를 만들 것</li>
    <li>함수의 return값을 받아와서 출력할 것</li>
  </ol>

  <ul>
    <li>c와 포인터 사용을 권장하되, 다른 프로그래밍 언어도 사용가능하며 포인터 사용이 필수적이진 않다.</li>
  </ul>

  <p>간단한 문제였고, 지난 겨울 방학때 초등학생들 독서지도했던 시절에 시간 남을때 손코딩했던 기억을 되살려 다음과 같이 적어 내었다.</p>

  <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">func</span><span class="p">(</span><span class="kt">int</span> <span class="n">arr</span><span class="p">[]){</span>
  <span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">min</span><span class="o">&gt;</span><span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
      <span class="n">min</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">min</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
  <span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">2</span><span class="p">};</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">func</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>  </div>

  <p>포인터 사용에 익숙하지 않아서 포인터를 사용하지 않고 코딩했었다.</p>

  <p>후에 끝나고 포인터를 사용해서 코딩해봤다.</p>
  <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">func</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span> <span class="n">ptr</span><span class="p">){</span>
  <span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="o">*</span><span class="n">ptr</span><span class="p">;</span>
  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="n">min</span><span class="o">&gt;*</span><span class="p">(</span><span class="n">ptr</span><span class="o">+</span><span class="n">i</span><span class="p">)){</span>
      <span class="n">min</span> <span class="o">=</span> <span class="o">*</span><span class="p">(</span><span class="n">ptr</span><span class="o">+</span><span class="n">i</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">min</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
  <span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">11</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">8</span><span class="p">};</span>
  <span class="kt">int</span><span class="o">*</span> <span class="n">ptr</span> <span class="o">=</span> <span class="n">arr</span><span class="p">;</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">func</span><span class="p">(</span><span class="n">ptr</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>  </div>

  <h3 id="section">마치며</h3>
  <p>교수님이 책을 공짜로 주시며 수업 진행 조교를 하라고 하셨다.</p>

  <p>이번 학기도 화이팅~</p>
</div>]]></content><author><name>woong</name></author><category term="cpp" /><category term="cpp" /><category term="programming" /><summary type="html"><![CDATA[c++]]></summary></entry><entry><title type="html">[15649] N과 M(1)</title><link href="http://localhost:4000/boj/boj15649/" rel="alternate" type="text/html" title="[15649] N과 M(1)" /><published>2023-03-08T00:00:00+09:00</published><updated>2023-03-08T00:00:00+09:00</updated><id>http://localhost:4000/boj/boj15649</id><content type="html" xml:base="http://localhost:4000/boj/boj15649/"><![CDATA[<!--
문제 🔍
풀이 🎯 ⭕ ❌
주의할 점 🚨
짚고갈 점 ✏️
기타 🔥🌝🪐🔔
-->
<h2 id="-문제">🔍 문제</h2>
<blockquote>
  <p><a href="https://www.acmicpc.net/problem/15649">https://www.acmicpc.net/problem/15649</a></p>
</blockquote>
<div class="notice">
  <p>자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 수열을 모두 구하는 프로그램을 작성하시오.</p>

  <ul>
    <li>1부터 N까지 자연수 중에서 중복 없이 M개를 고른 수열</li>
  </ul>
</div>

<h2 id="-풀이">🎯 풀이</h2>
<h3 id="1-첫-번째-풀이">1. 첫 번째 풀이</h3>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">arr</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">visited</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">,};</span>

<span class="kt">void</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">cnt</span><span class="p">){</span>
  <span class="k">if</span><span class="p">(</span><span class="n">cnt</span> <span class="o">==</span> <span class="n">m</span><span class="p">){</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">m</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
      <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="sc">' '</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="sc">'\n'</span><span class="p">;</span>
    <span class="k">return</span><span class="p">;</span>
  <span class="p">}</span>

  <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">visited</span><span class="p">[</span><span class="n">i</span><span class="p">]){</span>
      <span class="n">arr</span><span class="p">[</span><span class="n">cnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
      <span class="n">visited</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
      <span class="n">dfs</span><span class="p">(</span><span class="n">cnt</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
      <span class="n">visited</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
  <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="n">m</span><span class="p">;</span>
  <span class="n">dfs</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<h2 id="️-회고">✏️ 회고</h2>
<p>정석으로 푼 것 같은데</p>

<s>사실 문제를 너무 많이 봐서 외워버렸다.</s>

<p>백트래킹에 대한 이해가 더더욱 필요할 것 같다.</p>]]></content><author><name>woong</name></author><category term="BOJ" /><category term="Algorithm" /><category term="C++" /><summary type="html"><![CDATA[BOJ_C++]]></summary></entry><entry><title type="html">서점 웹사이트 만들기[2]_부트스트랩 적용</title><link href="http://localhost:4000/nodejs/book2/" rel="alternate" type="text/html" title="서점 웹사이트 만들기[2]_부트스트랩 적용" /><published>2023-02-22T00:00:00+09:00</published><updated>2023-02-22T00:00:00+09:00</updated><id>http://localhost:4000/nodejs/book2</id><content type="html" xml:base="http://localhost:4000/nodejs/book2/"><![CDATA[<!--
문제 🔍
풀이 🎯 ⭕ ❌
주의할 점 🚨
짚고갈 점 ✏️
기타 🔥🌝🪐🔔
-->
<h2 id="부트스트랩bootstrap-사용">부트스트랩(Bootstrap) 사용</h2>
<p>아무리 게임을 잘 만들어도 디자인 부분이 별로면 흥미가 떨어지듯이,</p>

<p>웹 페이지도 코드를 잘 짜고 기능들을 잘 구현했다한들 디자인은 결코 놓칠 수 없다.</p>

<p>그렇기에 사용되는 것이 부트스트랩이다.</p>

<p>부트스트랩이란 웹페이지의 디자인을 도와주는 프론트엔드 프레임워크인데,</p>

<p>부트스트랩을 사용하는 방법에는 <code class="language-plaintext highlighter-rouge">직접 다운로드</code>하는 방법과, <code class="language-plaintext highlighter-rouge">CDN방식</code>으로 링크를 거는 방법이 있다.</p>

<p>나는 CDN방식으로 부트스트랩을 사용해보았다.</p>

<h2 id="cdn방식으로-링크-걸기">CDN방식으로 링크 걸기</h2>
<p><a href="https://getbootstrap.com/">https://getbootstrap.com/</a></p>

<p>부트스트랩 공식사이트에 가면, CDN방식으로 include하는 방법이 있다.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"crossorigin="anonymous"&gt;
</code></pre></div></div>
<p>나는 해당 코드를 사용하였다.</p>

<p>이후 아래 4줄을 추가해준다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"&gt;&lt;/script&gt;
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"&gt;&lt;/script&gt;
&lt;script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"&gt;&lt;/script&gt;
&lt;script src="https://kit.fontawesome.com/c998a172fe.js"&gt;&lt;/script&gt;
</code></pre></div></div>

<p>네 줄 중 위 부터 세 줄은, 부트스트랩을 적용시켜주는 코드이다. 아이콘을 사용하기 위해 마지막 한줄까지 추가해준다.</p>

<h2 id="네비게이션-바-홈-버튼-및-버튼-방식-추가하기">네비게이션 바, 홈 버튼 및 버튼 방식 추가하기</h2>
<p>다음으로는 네비게이션 바와, 홈 버튼(타이틀), 메뉴 버튼을 추가해준다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top"&gt;
&lt;span class="navbar-brand mx-5 mb-0 font-weight-bold font-italic"&gt;woong's book&lt;/span&gt;
&lt;button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"&gt;
    &lt;span class="navbar-toggler-icon"&gt;&lt;/span&gt;
&lt;/button&gt;
</code></pre></div></div>
<p>현재 코드이다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>

<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"utf-8"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;&lt;/title&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"</span> <span class="na">integrity=</span><span class="s">"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"</span><span class="na">crossorigin=</span><span class="s">"anonymous"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://code.jquery.com/jquery-3.3.1.slim.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://kit.fontawesome.com/c998a172fe.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;/head&gt;</span>

<span class="nt">&lt;body</span> <span class="na">style=</span><span class="s">"padding-top:90px;"</span> <span class="nt">&gt;</span>

    <span class="nt">&lt;nav</span> <span class="na">class=</span><span class="s">"navbar navbar-expand-lg navbar-dark bg-dark fixed-top"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"navbar-brand mx-5 mb-0 font-weight-bold font-italic"</span><span class="nt">&gt;</span>woong's book<span class="nt">&lt;/span&gt;</span>
        <span class="nt">&lt;button</span> <span class="na">class=</span><span class="s">"navbar-toggler"</span> <span class="na">type=</span><span class="s">"button"</span> <span class="na">data-toggle=</span><span class="s">"collapse"</span> <span class="na">data-target=</span><span class="s">"#navbarSupportedContent"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"navbar-toggler-icon"</span><span class="nt">&gt;&lt;/span&gt;</span>
        <span class="nt">&lt;/button&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<h2 id="적용-후-모습">적용 후 모습</h2>
<p><img src="https://user-images.githubusercontent.com/114065532/220543728-81c8e8ca-299d-408e-b8cd-3851f026a94f.png" alt="image" /></p>

<p>이제 네비게이션 바에 메뉴(탭)들을 추가해보자.</p>]]></content><author><name>woong</name></author><category term="nodejs" /><category term="web" /><summary type="html"><![CDATA[nodejs]]></summary></entry><entry><title type="html">서점 웹사이트 만들기[1]_기획</title><link href="http://localhost:4000/nodejs/book1/" rel="alternate" type="text/html" title="서점 웹사이트 만들기[1]_기획" /><published>2023-02-22T00:00:00+09:00</published><updated>2023-02-22T00:00:00+09:00</updated><id>http://localhost:4000/nodejs/book1</id><content type="html" xml:base="http://localhost:4000/nodejs/book1/"><![CDATA[<!--
문제 🔍
풀이 🎯 ⭕ ❌
주의할 점 🚨
짚고갈 점 ✏️
기타 🔥🌝🪐🔔
-->
<h2 id="사이트-프로젝트_서점-웹사이트-제작">사이트 프로젝트_서점 웹사이트 제작</h2>
<p>사이드 프로젝트로 node.js 프레임워크를 이용하여 서점 웹사이트를 제작해보았다.</p>

<blockquote>
  <p>목록을 탭하면 해당 글로 이동합니다.(진행중)</p>
</blockquote>

<h3 id="기능목록">기능목록</h3>
<ul>
  <li><a href="(https://xxng1.github.io/nodejs/book2/)">부트스트랩(Bootstrap) 적용 ⭕</a></li>
  <li>베스트셀러,이달의 책/, E-Book 탭 구현 ❌</li>
  <li>로그인/로그아웃 구현 ❌</li>
  <li>책 사진/이름/저자/가격 구현 ❌</li>
  <li>장바구니(카트) 담기 구현 ❌</li>
  <li>게시판 구현(CRUD 가능) ❌</li>
  <li>관리자 아이디 구현(CURD 가능) ❌</li>
  <li>검색 기능 구현 ❌</li>
</ul>

<h3 id="회고">회고</h3>
<ul>
  <li>구현하지 못한 것과 이유 ❌</li>
  <li>힘들었던 것 ❌</li>
</ul>]]></content><author><name>woong</name></author><category term="nodejs" /><category term="web" /><summary type="html"><![CDATA[nodejs]]></summary></entry></feed>